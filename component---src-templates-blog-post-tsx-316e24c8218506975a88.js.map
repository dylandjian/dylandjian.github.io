{"version":3,"file":"component---src-templates-blog-post-tsx-316e24c8218506975a88.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@chakra-ui/layout/dist/chunk-NTCQBYKE.mjs","webpack://gatsby-starter-blog/./node_modules/@chakra-ui/layout/dist/chunk-KRPLQIP4.mjs","webpack://gatsby-starter-blog/./src/components/Bio.tsx","webpack://gatsby-starter-blog/./src/components/Seo.tsx","webpack://gatsby-starter-blog/./src/templates/BlogPost.tsx"],"sourcesContent":["'use client';\n\nimport { Stack } from \"./chunk-ZHMYA64R.mjs\";\n\n// src/stack/v-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VStack = forwardRef((props, ref) => /* @__PURE__ */jsx(Stack, {\n  align: \"center\",\n  ...props,\n  direction: \"column\",\n  ref\n}));\nVStack.displayName = \"VStack\";\nexport { VStack };","'use client';\n\n// src/flex.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nFlex.displayName = \"Flex\";\nexport { Flex };","import * as React from 'react'\nimport { Text, Flex, VStack, HStack } from '@chakra-ui/react'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nexport function Bio() {\n  return (\n    <Flex className=\"bio\">\n      <HStack>\n        <Flex width={200}>\n          <StaticImage\n            className=\"bio-avatar\"\n            layout=\"fixed\"\n            formats={['auto', 'webp', 'avif']}\n            src=\"../images/profile-pic.png\"\n            width={200}\n            height={200}\n            quality={100}\n            alt=\"Profile picture\"\n          />\n        </Flex>\n        <VStack align=\"start\">\n          <Text fontSize=\"xl\" as=\"b\">\n            Welcome to my blog !\n          </Text>\n          <Text>\n            I am a Software Engineer, mostly self-taught and passionated about a\n            lot of different topics.\n          </Text>\n          <Text>\n            On this blog, you will find blog posts about anything, recipes,\n            photos and any other endeavors I may find interesting to share.\n          </Text>\n          <Text> Happy browsing !</Text>\n        </VStack>\n      </HStack>\n    </Flex>\n  )\n}\n","import * as React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nexport function Seo({ description = '', lang = 'fr', meta = [], title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata?.social?.twitter || '',\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { Bio } from '../components/Bio'\nimport { Layout } from '../components/Layout'\nimport { Seo } from '../components/Seo'\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || 'Title'\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 style={{ margin: 0 }} itemProp=\"headline\">\n            {post.frontmatter.title}\n          </h1>\n          <p style={{ marginBottom: 0 }}>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {!previous && (\n              <li>\n                <Link to={'/'} rel=\"prev\">\n                  ← Home page\n                </Link>\n              </li>\n            )}\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n            {!next && (\n              <li>\n                <Link to={'/'} rel=\"prev\">\n                  Home page →\n                </Link>\n              </li>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["VStack","props","ref","jsx","align","direction","displayName","Flex","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","Bio","React","className","HStack","width","StaticImage","layout","formats","src","height","quality","alt","__imageData","require","Text","fontSize","as","Seo","_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","Helmet","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","Head","_ref2","data","markdownRemark","post","frontmatter","excerpt","previous","next","location","siteTitle","Layout","itemScope","itemType","style","margin","itemProp","marginBottom","date","dangerouslySetInnerHTML","__html","html","listStyle","padding","Link","to","rel","fields","slug"],"sourceRoot":""}